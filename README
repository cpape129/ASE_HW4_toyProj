README
Riya Kumar
Christine Pape

***Rather than reinventing the wheel, a lot of the following is from out project as a team since this is a late submission. We integrated our own webpages into it and learned how the backend works to get it functional.***


REQUIREMENTS:
maven--10.11.6 or later
mysql--5.7 or later
jdk--6.0 or later
spring--will be automatically downloaded through maven

HOW TO RUN:
1. Change the line "spring.jpa.hibernate.ddl-auto=none" to "spring.jpa.hibernate.ddl-auto=create" in ui/src/main/resources/application.properties
2. Start MySQL server. Execute pre-exec.sql; this will create your database.
3. On the command line, inside the ui directory, run "./mvnw spring-boot:run"
4. Once the server has started successfully, kill it (you may also run test.sh to test initial functionality; this will insert 2 rows into the DB--it should hand back two instances of the index2.html).
5. Your table should be inside the database db_example. Use MySQL to execute post-create.sql
6. Revert the line in application.properties to none instead of create (this is important so that the data does not get dropped and recreated).
7. run "./mvnw spring-boot:run" and go to localhost:8090 in the browser; now you can input a name and email into the form and add items to your database as well as viewing it as JSON.
7.5 PLEASE NOTE: YOU MAY BE ASKED FOR A USERNAME AND PASSWORD IN THE BROWSER. USERNAME IS user AND PASSWORD IS password.
8. The second test file, test2.sh, will first show what is in the database (demonstrating persistent storage of the first test case which has been added before the server was killed), returning a JSON representation of what's in the database, then add two more (both of which should return index2.html) and show the updated database once more.

WORKS CITED

1. https://stackoverflow.com/questions/42115370/how-to-pass-html-input-values-into-database-from-form-springboot
2.https://stackoverflow.com/questions/9311940/redirect-to-dynamic-url-in-spring-mvc
3. https://spring.io/guides/gs/accessing-data-mysql/
4. https://spring.io/guides/gs/serving-web-content/
5. https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j
6. https://www.mkyong.com/spring-security/spring-security-hello-world-example/
7. https://www.mkyong.com/spring-security/spring-security-password-hashing-example/
8. http://scrumbucket.org/sanitize-your-spring-mvc-controller/
9. http://www.mkyong.com/spring-security/spring-security-form-login-using-database/ 


